const a = [{ a: "apple", b: "ball", config: { debug: true } }];
const b = [{ a: "apple", b: "ball", config: { debug: false } }];

// Deep equality checker
function deepEqual(obj1, obj2) {
  if (obj1 === obj2) return true;

  if (
    typeof obj1 !== "object" || obj1 === null ||
    typeof obj2 !== "object" || obj2 === null
  ) return false;

  const keys1 = Object.keys(obj1);
  const keys2 = Object.keys(obj2);
  if (keys1.length !== keys2.length) return false;

  return keys1.every(key => deepEqual(obj1[key], obj2[key]));
}

// Compare and mark changes
const result = b.map((itemB, index) => {
  const itemA = a[index];
  const changed = !deepEqual(itemA, itemB);
  return changed ? { ...itemB, changed: true } : itemB;
});

console.log(result);


// Calculates new time using moment
  function calculateNewDayTime(day, timeStr) {
    const baseDate = moment(); // Today
    if (day === "T-1") {
      baseDate.subtract(1, "day");
    }

    const [hour, minute] = timeStr.split(":").map(Number);
    baseDate.set({ hour, minute, second: 0, millisecond: 0 });

    const resultDate = baseDate.clone().add(1439, "minutes"); // Add 23h 59m

    const newDay = resultDate.isSame(baseDate, "day") ? day : "T";
    const formattedTime = resultDate.format("HH:mm");

    return `${newDay} ${formattedTime}`;
  }

  const handleCalculate = () => {
    const output = calculateNewDayTime(selectedDay, selectedTime);
    setResult(output);
  };
